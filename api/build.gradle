plugins {
	id 'org.springframework.boot' version '2.2.7.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
}

group = 'michael'
version = '1.0.0'
sourceCompatibility = '11'
targetCompatibility = '11'
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
//	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compile 'com.amazonaws.serverless:aws-serverless-java-container-spring:[1.0,)'
	compile 'io.symphonia:lambda-logging:1.0.1'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	useJUnitPlatform()
}

def profiles = 'lambda'

task buildZip(type: Zip) {
	doFirst {
		System.setProperty('spring.profiles.active', profiles)
	}	from compileJava
	from processResources
	into('lib') {
		from(configurations.compileClasspath) {
			exclude 'tomcat-embed-*'
		}
	}
}

build.dependsOn buildZip